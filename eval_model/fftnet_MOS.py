import numpy
import numpy as np

def fftnet_mos(final_pesq):
    
    A_slt = np.array([[3.3,2.375,2.9167,4.4,4.125,4.4286],
      [3.4,4,4.3333,5,4.5,4.3],
      [3,3,2.8182,4.2,4.2222,4.6667],
      [3.4444,2.625,2.6667,4.625,3.7143,4.5],
      [3.5,3.625,3.3333,4.4545,4.4286,4.4444],
      [3.5,2.7,2.5,3.5714,4.25,4.8182],
      [3.8571,4.4286,3.0833,4.5714,4.6667,4.7778],
      [3.5714,3.6667,3.4444,4.375,4.25,4.7778],
      [3.0909,4,2.4444,4.875,4,4.6],
      [3.4444,4.1,3.2857,4,4.5,4.5],
      [3,3.2,3.4545,4.3333,4.4444,4.6667],
      [3,3.6,3.2727,3.875,4.3636,4.8571],
      [2.7143,3.2727,2.375,4.3,4,5],
      [2.3,3.5,3.1,3.8571,4,4.6667],
      [3.2222,3.5714,3.5714,3.7778,4.2,4.8571],
      [2.8,4.2,3,4.2,4.1111,4.8],
      [3.3333,2.5714,3.2857,4.1,4,4.2],
      [2.5,3.4444,2.4,4.2,4.3,4.2222],
      [3.25,3.7143,3.3636,4.2,4,4.6667],
      [3.2727,2.5556,3,4.3333,4.3333,4.8889],
      [2.7273,3.5,2.1,4,4.0909,4.7778],
      [2.5,3.75,2.7,5,4.25,4.8571],
      [2.8,2.7273,2.4286,3.75,4.1429,4.6667],
      [3.5,4.25,3.4286,4.5,4.1111,4.125],
      [3.625,4.7778,3.1667,4.5,4.2222,4.5455],
      [2.7273,4.1818,2.9,4.25,4.2222,4.5556],
      [3.75,3.9,2.5455,4.3333,4,4.4444],
      [3,3.8889,2.6667,4.1111,4.4444,4.5556],
      [2.4286,4,2.7143,4.0714,4.0909,4.5714],
      [3.3636,3.5714,2.8182,4.4167,4.3333,4.4],
      [3.4545,4.2857,3.7273,4,4.5,4.6667],
      [3.6667,3.8889,3.3636,4.5455,4.75,4.5556],
      [2.8889,2.8889,2.7,3.375,4.1667,4.2222],
      [3.0909,4.125,3.1111,4.3,4.0714,4.8571],
      [3.2222,3.3,3,4.2,4.3,4.3636],
      [2.7778,3.4444,2.9,4.3,4,4.2727],
      [3,4,3.2222,4.3636,4.5556,4.5],
      [3.1,3.25,3.1818,4.5556,4.4444,4.5],
      [3.1111,3.75,3,4.3333,4.2222,4.7143],
      [3.2222,2.125,2.3333,4,4.5455,4.8889],
      [3.2857,4,3.125,4.5556,4,4.6364],
      [3.4,3.3636,3.1429,4.1111,4.625,4.8],
      [2.25,3.3846,2.5,4,3.75,4.75],
      [3.25,4.4167,3,4.7143,5,4.8333],
      [3.1429,3.1429,2.7273,3.9091,4,4.7778],
      [3.4545,4.2222,2.8571,4.8889,4.3333,4.7143],
      [3.6,3.9167,3.1,4.2,3.8889,4.875],
      [3.2222,2.9,3.5,4.7273,4.4,5],
      [3.125,4.25,3.1111,4.4545,4.4444,4.4444],
      [3,3.875,2.9,3.7778,4,4.3636]])

    A_clb = np.array([[3.7143,3.25,1.6667,4.625,3.6667,4.75],
      [3.6,4.6,4,4.7273,4.9,4.7778],
      [2,4,2.5556,4.4,4,4.625],
      [2.8,3.875,3.6667,4.6364,4.0714,5],
      [3.5,3.6,3,4.2,4,4.75],
      [4,3.25,2.5,4.6,4,4.7273],
      [3.5714,3,2.1667,4.0714,4.125,4.875],
      [3.3,4.4444,3.875,4.3,4.1111,4.6667],
      [3.375,3.8889,3.25,3.7778,3.375,4.3077],
      [3.5455,3.7692,2.25,4.6,4.1111,4.7143],
      [3.3636,3.4,4.1667,4.6,4.2308,4.8],
      [3,3.5833,2.875,4.4545,4.1429,4.5],
      [2.875,3.2308,2.6667,4.375,3.6667,4.8333],
      [2.75,3.8333,3.6,4,4.3333,4.8],
      [3.3333,3.625,3.2222,4.25,3.5,4.8333],
      [3.4444,3.5556,2.875,4.6667,4.7143,4.9167],
      [3.125,3.8889,3.5,4.4167,4.1,4.5385],
      [3.5,3,2.9,3.8889,4.5556,4.875],
      [3.625,4,3.3333,4.375,3.7333,4.7143],
      [3.5,3.2222,3.1667,4.7,3.8,4.75],
      [3.25,3.8,2.625,4.5556,4.1667,4.7778],
      [3,3.7778,2.4286,4.25,4.1111,4.8333],
      [2.8333,3.5,2.5,4.5,4.125,4.7143],
      [4.1429,4,2.4,4.3077,4.0909,4.8333],
      [3.3,3.5714,3.75,4.2727,4.7,4.5],
      [3.875,4.6667,2.3,4.6667,4.6,4.3333],
      [3.25,3.363636,3.142857,3.8,3.714286,4.75],
      [3.142857,3.5,3.25,3.7,4,4.285714],
      [2.8889,3.6364,2.5,4.375,4.3333,4.25],
      [3,4,3,4,4.6667,4],
      [2.7273,3.75,3.1111,4.75,4.125,4.6667],
      [3.5556,3.375,2.75,4.2857,4.6667,4.6],
      [3.6,3.777778,1.5,3.8544,3.571429,4.444444],
      [3.3846,3.875,3.125,4.3333,3.7273,4.6364],
      [3.8333,4.3,3,4.4,4.3333,4.9167],
      [3.5,3.8,3,4.5,4.75,4.6667],
      [3.625,4.4,2.8333,4.75,4.4,4.2857],
      [2.6,3.9,2.5,4.4286,4,4.8],
      [3.25,3.8462,3.4286,4.75,4,4.5833],
      [2.6667,4.2143,2.9,4.0714,4.1111,4.8333],
      [2.8889,3.5714,2.4,4.6923,3.8,4.8],
      [3.2,4.2857,2.4286,4.5,3.2,5],
      [2.8889,3.7143,2.75,4.6667,4.2857,4.625],
      [3.5,4.375,3.5556,3.9091,4.5455,4.8182],
      [3.3333,3.5714,2.0909,4,3.875,4.875],
      [2.8,3.75,2.7778,4.6,4.1,4.9091],
      [3.1667,3,2.7778,4.1429,3.5714,4.75],
      [3.3636,3.75,2.5,4.7273,4.5455,4.6667],
      [2.6,3.0833,2.7,4.125,4.3636,4.75],
      [3.7273,3.1667,2.5,4.4,4.3333,3.5]])


    A_rms = np.array([
      [3.6,3.4286,3.1667,4.2222,3.25,3.8333],
      [3.2222,4,3.5,4.375,4.7273,4.4286],
      [3.5556,4.4,3,4.125,4.3333,4.1667],
      [3.1429,4,3.5714,5,4,4.7],
      [2.8333,4,3.75,4.6,4.3333,4.5714],
      [3.6,3.5556,3,3.8889,3.8571,4.125],
      [3,3.625,3.5714,4,4.5556,4.5],
      [2.5,4,3.4,3.6364,3.6667,4.3],
      [2.5,3.75,3.0909,3.8889,4.3333,4.625],
      [2.5,4.1111,2.6,4.6667,3.6667,4.2],
      [2.625,3.25,3.25,4,3.5,4.5],
      [3.125,4.3333,3.5714,4.3636,4.3,4.4286],
      [3,4.1111,3.4444,4.3333,4.1,4.5714],
      [2.8333,3.7143,3.1111,3.8889,4.5455,4.2222],
      [3.7143,4.2857,3.375,5,4.875,4.8333],
      [2.6,4,3,3.8571,4.5,3.5714],
      [3,3.9167,3.2,3.5,4,4],
      [4.1667,2.375,2.8333,3.2,4.5556,3.8571],
      [2.8889,3.6,3.4286,4.3333,4.7143,4.3333],
      [3.8889,4.0833,3.5556,4.3333,3.8333,4.5714],
      [3.25,2.8333,3.125,3.7143,4.4,4.25],
      [2.2857,3.7,3.1429,4.1667,3.875,4.3],
      [2.7143,3,3.1429,4.4444,4.2857,4.25],
      [2.5714,3.875,2.875,4.4286,3.1429,4.7143],
      [3.1111,3.25,3.5,4.5,4.4286,4.4],
      [2.2,3,2.8889,3.4444,4.625,4.5556],
      [2.6667,3,4.2222,4,5,4.5],
      [3,4.1667,3.1429,3.8333,3.7143,5],
      [3,3.7143,3,4.2857,4.2222,4],
      [2.875,3,3.4286,3.5,4.2,4.2857],
      [3.1667,3.75,3,4.375,4.7143,4.5],
      [3,4,2.9,4.1667,4.5455,4.6667],
      [2.1429,3.125,2.4,3.3333,2.8571,4.1667],
      [2.4444,3.4286,3.2857,3.875,4.375,4.7143],
      [2.625,3.1,3.3333,2.9,4,4.5],
      [3.5,3.5,3.375,4,4.1,4.2222],
      [3.6667,4.25,3.6667,4.5556,3.8889,4.8],
      [2.9,4.25,3,4.1429,3.7143,4.3],
      [2.5455,4,3,4.4444,4.625,4.3333],
      [2.375,3.875,3.625,4.2857,4.5,4.4286],
      [3.125,3.2222,3.7,4,4,4.2727],
      [3.1,3.4,2.8571,4,4.2857,4.25],
      [3.3333,4.3333,2.3333,4.2,3.8,4.7692],
      [2.2,4,4,4.625,4.7143,4.2],
      [2.7,3.5714,3.4444,4.4444,4.1667,4.4545],
      [2.875,2.6,3.1,2.5,4.125,4.1667],
      [3.125,2.25,3.2,3.3333,4.4,4.5455],
      [2.125,3.8571,2.8571,4.1429,4.125,4],
      [2.5714,2.375,2.7143,3,4.2222,3.75],
      [2.625,3.7778,3.3333,4.1429,4.5714,4.2]])

    A_bdl = np.array([
      [2.7143,4.1429,3.2,4.5714,3.3333,4.4545],
      [3.2308,4.2,3.5,5,4.875,4.8571],
      [3.2727,4.1818,2.8889,4.5,4.5455,4.5556],
      [3.1111,4.3333,3.75,5,4.625,4.7778],
      [4.5,3.5,3.8571,4.5556,4.7143,4.6667],
      [3.3636,4.1818,3.3,4.5833,4.1667,4.4],
      [3.4286,4.4545,3.3333,4.6667,4.4667,4.9],
      [2.8571,4.4545,3.2667,4.8,4.2,4.5714],
      [3.375,4.4286,3.3333,5,4.375,4.7857],
      [2.5,4.25,3.4286,4.7273,4.2222,4.4],
      [3.2222,4.5455,3.6154,4.5455,4.5455,4.4444],
      [3.2222,4.5,3.5714,4.75,4.5714,4.5],
      [2.5455,4.4,3.4286,4.6667,4,4.5333],
      [3.4286,4,3.2,4.3333,4.4167,5],
      [4,4,3.461538,4.4,4.2,5],
      [3.5,4.125,3.3333,4.5556,4.2857,4.75],
      [3.2727,3.5556,3.0909,4.8182,4.1667,5],
      [3,4.6154,3.5,4.6667,4.5556,4.5714],
      [2.625,4.625,3.8889,4.8462,4.8333,4.6667],
      [2.3333,4,3,4.6154,4.5,4.5],
      [4.3,3.9091,2.7692,4.5455,4.2,4.6667],
      [2.9091,4.125,3.6,4.5,4.5455,4.8333],
      [2.6667,4.2727,3.1667,4.4444,4.6364,4.8571],
      [3,3.625,3,4.8,4.7,4.7273],
      [4,4.4444,3.5385,4.6667,4.375,4.4444],
      [3.25,4.0909,3.3333,4.4,4.3,4.75],
      [3.625,4.2,3,4.8571,4.6667,4.3333],
      [2.8889,4,3.9091,4.6364,4.4286,4.625],
      [3.7,3.8571,3,4.7778,4.4,4.75],
      [2.6667,3.7,3.4545,4.8,4.875,4.8571],
      [3.2222,3.8,3.5,4.8333,4.1818,4.5385],
      [3.2727,4.1,3.0833,4.3,4.5,4.5556],
      [3.3636,3.6667,3,4.6,4,5],
      [3.9,4,3.3333,4.5,4.1111,4.2222],
      [2.5714,4.3636,4,4.7,4.6667,4.7],
      [2.6,4.5556,3,4.2222,4.2727,4.6],
      [2.5385,4.3333,3.625,4.6,4.4545,4.7143],
      [3.125,4.3333,3.1667,4.6,4.4615,4.5833],
      [3,4,2.75,4.3077,4.2857,4.8],
      [2.9091,3.75,3.6429,4.75,4.4,5],
      [3.125,4.3636,3.2,4.2222,3.3,4.9091],
      [2.8,4,3.0,4.2,4.5,4.777778],
      [3.4,4.3636,3,4.6364,4.4,4.9231],
      [3.5,4.5455,3.4444,5,4.7,5],
      [2.75,4.3846,3.375,4.2222,4.5833,4.8],
      [2.7,4.2,3.6667,4.625,4.7143,4.4444],
      [3.3,4,2.9091,4.5455,4.4286,4.6],
      [3.0833,4.3333,3.6364,4.9,4.8,4.6],
      [3.3333,3.9286,3,4.75,4.3333,4.3],
      [2,3.625,3.2222,4.3333,4.1,4.3333]
    ])

    def load_MOS(matrix,noise): #check change path names

        list_methods=numpy.array(["mlsa","wn1","fft1","wn2","fft2","real"])

        for i,method in enumerate(list_methods):
            if method==noise:
                location=i

        length=matrix.shape[0]
        dataset={}
        dataset[noise]={}
        dataset[noise]['mos']=[]

        for i in range(length):
            dataset[noise]['mos'].append(matrix[i][location])
        return dataset

    list_methods=numpy.array(["mlsa","wn1","fft1","wn2","fft2"])
    final_mos=[]
    for method in list_methods:    

        speakers=["slt","bdl","clb","rms"]
        final=[]
        for i,speaker in enumerate(speakers):
            if speaker=='slt':
                mlsa_mos=load_MOS(A_slt,method)
                A2=mlsa_mos[method]['mos']
            elif speaker=='clb':
                mlsa_mos=load_MOS(A_clb,method)
                A2=mlsa_mos[method]['mos']
            elif speaker=='rms':
                mlsa_mos=load_MOS(A_rms,method)
                A2=mlsa_mos[method]['mos']
            elif speaker=='bdl':
                mlsa_mos=load_MOS(A_bdl,method)
                A2=mlsa_mos[method]['mos']
            if i==0:
                final=A2
            else:
                
                final.extend(A2)
        #final = sum(final)/len(final)
        final_mos.extend(final)

    output=final_mos
    final_mos=[]
    for i in range(20):
        final_mos.append(np.mean(output[i*50:i*50+50]))
    print(len(final_mos))

    

    from scipy.stats import pearsonr
    corr, _ = pearsonr(final_mos,final_pesq)
    from scipy.stats import spearmanr
    corr1,_=spearmanr(final_mos,final_pesq)
    print(corr)
    print(corr1)
    
    return [corr,corr1]